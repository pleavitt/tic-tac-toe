body {
  font: 14px "Century Gothic", Futura, sans-serif;
  margin: 20px;
  background-color: #fff;
  background-image: url("data:image/svg+xml,%3Csvg width='64' height='64' viewBox='0 0 64 64' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8 16c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zm33.414-6l5.95-5.95L45.95.636 40 6.586 34.05.636 32.636 2.05 38.586 8l-5.95 5.95 1.414 1.414L40 9.414l5.95 5.95 1.414-1.414L41.414 8zM40 48c4.418 0 8-3.582 8-8s-3.582-8-8-8-8 3.582-8 8 3.582 8 8 8zm0-2c3.314 0 6-2.686 6-6s-2.686-6-6-6-6 2.686-6 6 2.686 6 6 6zM9.414 40l5.95-5.95-1.414-1.414L8 38.586l-5.95-5.95L.636 34.05 6.586 40l-5.95 5.95 1.414 1.414L8 41.414l5.95 5.95 1.414-1.414L9.414 40z' fill='%239C92AC' fill-opacity='0.09' fill-rule='evenodd'/%3E%3C/svg%3E");
}

.game {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.game-info {
  display: inherit;
  flex-direction: column;
  padding-top: 10px;
}

.game-info ul {
  list-style-type: none;
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0;
  margin: 0;
}

.status {
  text-align: center;
  font-size: 2em;
  margin-bottom: 20px;
}

.toggle-line {
  text-align: center;
  font-size: 1em;
}

.reverse-toggle.react-toggle--checked .react-toggle-track {
  background-color: darkgreen;
}

.board-row:after {
  clear: both;
  content: "";
  display: table;
}

.square {
  background: #fff;
  border: 1px solid #999;
  float: left;
  font-size: 32px;
  line-height: 80px;
  height: 80px;
  margin-right: -1px;
  margin-top: -1px;
  padding: 0;
  text-align: center;
  width: 80px;
}

.square:focus {
  outline: none;
}

.kbd-navigation .square:focus {
  background: #ddd;
}

:root {
  --color-dark: #161616;
  --color-ocean: #416dea;
  --color-grass: #3dd28d;
  --color-snow: #FFFFFF;
  --color-salmon: #F32C52;
  --color-sun: #feee7d;
  --color-alge: #7999a9;
  --color-flower: #353866;
  --color-smoke: #e4e4e4;
  --font-face: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}

.button {
  display: flex;
  overflow: hidden;
  margin: 10px;
  padding: 12px 12px;
  cursor: pointer;
  user-select: none;
  transition: all 150ms linear;
  text-align: center;
  white-space: nowrap;
  text-decoration: none !important;
  text-transform: none;
  text-transform: capitalize;
  color: #fff;
  border: 0 none;
  border-radius: 4px;
  font-size: 13px;
  font-weight: 500;
  line-height: 1.3;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  justify-content: center;
  align-items: center;
  flex: 0 0 160px;
  box-shadow: 2px 5px 10px var(--color-smoke);

  &:hover {
    transition: all 150ms linear;
    opacity: .85;
  }

  &:active {
    transition: all 150ms linear;
    opacity: .75;
  }

  &:focus {
    outline: 1px dotted #959595;
    outline-offset: -4px;
  }
}

.button.-regular {
  color: #202129;
  background-color: #f2f2f2;
  font-size: 32px;

  &:hover {
    color: #202129;
    background-color: #e1e2e2;
    opacity: 1;
  }

  &:active {
    background-color: #d5d6d6;
    opacity: 1;
  }
}

.button.-dark {
  color: var(--color-snow);
  background: var(--color-dark);

  &:focus {
    outline: 1px dotted white;
    outline-offset: -4px;
  }
}

.button.-green {
  color: var(--color-snow);
  background: var(--color-grass);
  font-size: 32px;
}

.button.-blue {
  color: var(--color-snow);
  background: var(--color-ocean);
}

.button.-salmon {
  color: var(--color-snow);
  background: var(--color-salmon);
}

.button.-sun {
  color: #f15c5c;
  background: var(--color-sun);
}

.button.-alge {
  color: #e7ff20;
  background: var(--color-alge);
}

.button.-flower {
  color: #FE8CDF;
  background: var(--color-flower);
}

.button.currentMove {
  font-weight: bolder;
}

@mixin can-toggle-branding($can-toggle-off-color: #777,
$can-toggle-on-color: #36454f,
$can-toggle-inactive-text: rgba(white, 0.5),
$can-toggle-transition: cubic-bezier(0, 1, 0.5, 1)) {
  input[type="checkbox"] {
    &[disabled]~label {
      color: rgba($can-toggle-off-color, 0.5);
    }

    &:focus~label,
    &:hover~label {
      .can-toggle__switch {
        background-color: $can-toggle-off-color;

        &:after {
          color: darken($can-toggle-off-color, 10%);
        }
      }
    }

    &:hover~label {
      color: darken($can-toggle-off-color, 5%);
    }

    &:checked {
      ~label {
        &:hover {
          color: darken($can-toggle-on-color, 3%);
        }

        .can-toggle__switch {
          background-color: lighten($can-toggle-on-color, 5%);

          &:after {
            color: darken($can-toggle-on-color, 5%);
          }
        }
      }

      &:focus,
      &:hover {
        ~label {
          .can-toggle__switch {
            background-color: $can-toggle-on-color;

            &:after {
              color: darken($can-toggle-on-color, 10%);
            }
          }
        }
      }
    }
  }

  label {
    .can-toggle__label-text {
      flex: 1;
    }

    .can-toggle__switch {
      transition: background-color 0.3s $can-toggle-transition;
      background: lighten($can-toggle-off-color, 5%);

      &:before {
        color: $can-toggle-inactive-text;
      }

      &:after {
        // Autoprefixer choked here, so making the prefixes explicit
        -webkit-transition: -webkit-transform 0.3s $can-toggle-transition;
        transition: transform 0.3s $can-toggle-transition;
        color: $can-toggle-off-color;
      }
    }
  }
}

@mixin can-toggle-appearance ($can-toggle-width: 134px,
$can-toggle-height: 36px,
$can-toggle-border-radius: 4px,
$can-toggle-offset: 2px,
$can-toggle-label-font-size: 14px,
$can-toggle-switch-font-size: 12px,
$can-toggle-shadow: 0 3px 3px rgba(black, 0.4)) {
  $can-toggle-switch-width: $can-toggle-width/2;

  input[type="checkbox"] {

    &:focus~label,
    &:hover~label {
      .can-toggle__switch {
        &:after {
          box-shadow: $can-toggle-shadow;
        }
      }
    }

    &:checked {
      ~label {
        .can-toggle__switch {
          &:after {
            transform: translate3d($can-toggle-width - ($can-toggle-switch-width + $can-toggle-offset), 0, 0);
          }
        }
      }

      &:focus,
      &:hover {
        ~label {
          .can-toggle__switch {
            &:after {
              box-shadow: $can-toggle-shadow;
            }
          }
        }
      }
    }
  }

  label {
    font-size: $can-toggle-label-font-size;

    .can-toggle__switch {
      height: $can-toggle-height;
      flex: 0 0 $can-toggle-width;
      border-radius: $can-toggle-border-radius;

      &:before {
        left: $can-toggle-width/2;
        font-size: $can-toggle-switch-font-size;
        line-height: $can-toggle-height;
        width: $can-toggle-width/2;
        padding: 0 12px;
      }

      &:after {
        top: $can-toggle-offset;
        left: $can-toggle-offset;
        border-radius: $can-toggle-border-radius/2;
        width: $can-toggle-switch-width - $can-toggle-offset;
        line-height: $can-toggle-height - ($can-toggle-offset*2);
        font-size: $can-toggle-switch-font-size;
      }

      &:hover {
        &:after {
          box-shadow: $can-toggle-shadow;
        }
      }
    }
  }
}

.can-toggle {
  position: relative;

  *,
  *:before,
  *:after {
    box-sizing: border-box;
  }

  //overflow: hidden;
  input[type="checkbox"] {
    opacity: 0;
    position: absolute;
    top: 0;
    left: 0;

    &[disabled]~label {
      pointer-events: none;

      .can-toggle__switch {
        opacity: 0.4;
      }
    }

    &:checked {
      ~label {
        .can-toggle__switch {
          &:before {
            content: attr(data-unchecked);
            left: 0;
          }

          &:after {
            content: attr(data-checked);
          }
        }
      }

      &:focus,
      &:hover {
        ~label {}
      }
    }
  }

  label {
    user-select: none;
    position: relative;
    display: flex;
    align-items: center;

    .can-toggle__label-text {
      flex: 1;
      padding-left: 32px;
    }

    .can-toggle__switch {
      position: relative;

      &:before {
        content: attr(data-checked);
        position: absolute;
        top: 0;
        text-transform: uppercase;
        text-align: center;
      }

      &:after {
        content: attr(data-unchecked);
        position: absolute;
        z-index: 5;
        text-transform: uppercase;
        text-align: center;
        background: white;
        transform: translate3d(0, 0, 0);
      }
    }
  }

  // Default values for .can-toggle class
  @include can-toggle-branding;
  @include can-toggle-appearance;

  // Create toggles of different sizes by overriding the can-toggle-appearance mixin defaults
  &.can-toggle--size-small {
    @include can-toggle-appearance (90px, // Toggle width
    28px, // Toggle height
    2px, // Toggle border radius
    1px, // Offset (distance btw switch and box)
    13px, // Label font size
    10px, // Switch font size
    0 2px 2px rgba(black, 0.4) // Switch shadow on hover/focus
    );
  }

  &.can-toggle--size-large {
    @include can-toggle-appearance (160px, // Toggle width
    50px, // Toggle height
    4px, // Toggle border radius
    2px, // Offset (distance btw switch and box)
    14px, // Label font size
    14px, // Switch font size
    0 4px 4px rgba(black, 0.4) // Switch shadow on hover/focus
    );
  }

  // Or re-brand the toggle for different applications
  &.demo-rebrand-1 {
    @include can-toggle-branding (#b53e74, // Off state color
    #536878, // On state color
    rgba(white, 0.6), // Off state text color
    ease-in-out // Transition timing function
    );
  }

  &.demo-rebrand-2 {
    @include can-toggle-branding (#444, // Off state color
    #36454f, // On state color
    rgba(white, 0.7), // Off state text color
    cubic-bezier(0.860, 0.000, 0.070, 1.000) // Transition timing function
    );
    @include can-toggle-appearance (120px, // Toggle width
    60px, // Toggle height
    60px, // Toggle border radius
    2px, // Offset (distance btw switch and box)
    13px, // Label font size
    13px, // Switch font size
    0 4px 4px rgba(black, 0.4) // Switch shadow on hover/focus
    );
  }
}